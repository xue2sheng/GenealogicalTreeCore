#ifndef VERSION_H
#define	VERSION_H

/// \file version.h
/// In order to **speed up** local compilations and let us hardcode our locally generated files,
/// it's possible to instruct *cmake* to use this hardcoded header instead of usual GIT one.
///
/// The parameter to pass onto **cmake** is **VERSION_HARDCODED**:
///
///           cmake <rest of options> -DVERSION_HARDCODED=TRUE ..
///
/// This metadata information might be located through **strings** command
///
///  * Linux/Solaris/Mac:  
///
///           strings <binary> | grep VERSION 
///           strings <binary> | grep GIT_DETAILS 
///
///  * Windows (MinGW):
///
///           strings <binary> | findstr VERSION 
///           strings <binary> | findstr GIT_DETAILS 
///
/// \image latex version.png width=400px
///

/* Human friendly version numbers */ 
#define DEFINE_VERSION_FIRST  "0"
#define DEFINE_VERSION_MIDDLE "0"
#define DEFINE_VERSION_LAST   "0"

/* FAKE: Git info collected by CMake */ 
/* FAKE: git log --oneline --decorate -1 */
#define DEFINE_GIT_DETAILS     "0123456 (HEAD, origin/develop, origin/HEAD, develop) FAKE: hardcoded values without using GIT"
/* FAKE: git log -1 --format=%h */
#define DEFINE_GIT_COMMIT_HASH "0123456"

/* Version */
#define DEFINE_VERSION DEFINE_VERSION_FIRST "." \
        DEFINE_VERSION_MIDDLE "." DEFINE_VERSION_LAST \
	"_" DEFINE_GIT_COMMIT_HASH

/* Avoid GNU Compiler to optimize out */
#if _GNUC_
static const char* VERSION __attribute__((used)) __attribute__((nocommon)) = "VERSION = " DEFINE_VERSION;  
static const char* GIT_DETAILS __attribute__((used)) __attribute__((nocommon)) = "GIT_DETAILS = " DEFINE_GIT_DETAILS;  
#else
static const char* VERSION = "VERSION = " DEFINE_VERSION;
static const char* GIT_DETAILS = "GIT_DETAILS = " DEFINE_GIT_DETAILS;  
#endif

#endif	/* VERSION_H */

